#############################################################################
##  v      #                   The Coq Proof Assistant                     ##
## <O___,, #                INRIA - CNRS - LIX - LRI - PPS                 ##
##   \VV/  #                                                               ##
##    //   #  Makefile automagically generated by coq_makefile Vtrunk      ##
#############################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

NOARG: all

# 
# This Makefile may take COQBIN as argument passed as environment variables:
#  to specify the directory where Coq binaries resides;
Makefile-localvars.gen:
	$(COQBIN)coqtop -config > $@

-include Makefile-localvars.gen
.SECONDARY: Makefile-localvars.gen

##########################
#                        #
# Libraries definitions. #
#                        #
##########################

OCAMLLIBS?=
COQSRCLIBS?=-I $(COQLIB)kernel -I $(COQLIB)lib \
  -I $(COQLIB)library -I $(COQLIB)parsing \
  -I $(COQLIB)pretyping -I $(COQLIB)interp \
  -I $(COQLIB)proofs -I $(COQLIB)tactics \
  -I $(COQLIB)toplevel \
  -I $(COQLIB)plugins/cc \
  -I $(COQLIB)plugins/decl_mode \
  -I $(COQLIB)plugins/dp \
  -I $(COQLIB)plugins/extraction \
  -I $(COQLIB)plugins/field \
  -I $(COQLIB)plugins/firstorder \
  -I $(COQLIB)plugins/fourier \
  -I $(COQLIB)plugins/funind \
  -I $(COQLIB)plugins/interface \
  -I $(COQLIB)plugins/micromega \
  -I $(COQLIB)plugins/nsatz \
  -I $(COQLIB)plugins/omega \
  -I $(COQLIB)plugins/quote \
  -I $(COQLIB)plugins/ring \
  -I $(COQLIB)plugins/romega \
  -I $(COQLIB)plugins/rtauto \
  -I $(COQLIB)plugins/setoid_ring \
  -I $(COQLIB)plugins/subtac \
  -I $(COQLIB)plugins/subtac/test \
  -I $(COQLIB)plugins/syntax \
  -I $(COQLIB)plugins/xml
COQLIBS?= -R . RelationExtraction
COQDOCLIBS?=-R . RelationExtraction

##########################
#                        #
# Variables definitions. #
#                        #
##########################

RELEXTR_PLUGIN=relation_extraction_plugin

ZFLAGS=$(OCAMLLIBS) $(COQSRCLIBS) -I $(CAMLP4LIB)
OPT?=
COQFLAGS?=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQC?=$(COQBIN)coqc
COQDEP?=$(COQBIN)coqdep -c
GALLINA?=$(COQBIN)gallina
COQDOC?=$(COQBIN)coqdoc
CAMLC?=$(OCAMLC) -c -rectypes
CAMLOPTC?=$(OCAMLOPT) -c -rectypes
CAMLLINK?=$(OCAMLC) -rectypes
CAMLOPTLINK?=$(OCAMLOPT) -rectypes
GRAMMARS?=grammar.cma
CAMLP4EXTEND?=pa_extend.cmo pa_macro.cmo q_MLast.cmo
CAMLP4OPTIONS?=
PP?=-pp "$(CAMLP4BIN)$(CAMLP4)o -I $(CAMLLIB) -I . $(COQSRCLIBS) $(CAMLP4EXTEND) $(GRAMMARS) $(CAMLP4OPTIONS) -impl"

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

ML4FILES:=g_relation_extraction.ml4
MLFILES:=relation_extraction.ml\
  minimlgen.ml\
  host2spec.ml\
  coq_stuff.ml\
  pred.ml
CMOFILES:=$(ML4FILES:.ml4=.cmo) $(MLFILES:.ml=.cmo)
CMXFILES:=$(CMOFILES:.cmo=.cmx)
OFILES:=$(CMXFILES:.cmx=.o)
MLLIBFILES:=relation_extraction_plugin.mllib
CMAFILES:=$(MLLIBFILES:.mllib=.cma)
CMXAFILES:=$(CMAFILES:.cma=.cmxa)
MLIFILES:=relation_extraction.mli\
  minimlgen.mli\
  host2spec.mli\
  coq_stuff.mli\
  pred.mli\
  host_stuff.mli
CMIFILES:=$(sort $(CMOFILES:.cmo=.cmi) $(MLIFILES:.mli=.cmi))
CMXSFILES:=$(CMXFILES:.cmx=.cmxs) $(CMXAFILES:.cmxa=.cmxs)

all: $(CMOFILES) $(CMAFILES) $(if ifeq '$(HASNATDYNLINK)' 'true',$(CMXSFILES)) \
  ./test

mlihtml: $(MLIFILES:.mli=.cmi)
	 mkdir $@ || rm -rf $@/*
	$(OCAMLDOC) -html -rectypes -d $@ -m A $(ZDEBUG) $(ZFLAGS) $(^:.cmi=.mli)

all-mli.tex: $(MLIFILES:.mli=.cmi)
	$(OCAMLDOC) -latex -rectypes -o $@ -m A $(ZDEBUG) $(ZFLAGS) $(^:.cmi=.mli)

###################
#                 #
# Custom targets. #
#                 #
###################

: 
	
#the following is inserted verbatim

all: $(RELEXTR_PLUGIN).cma $(RELEXTR_PLUGIN).cmxs

clean: clean-plugin

clean-plugin:
	rm -f $(RELEXTR_PLUGIN).a

test: $(RELEXTR_PLUGIN).cma $(RELEXTR_PLUGIN).cmxs

#end verbatim


###################
#                 #
# Subdirectories. #
#                 #
###################

./test:
	cd ./test ; $(MAKE) all

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: NOARG all opt byte archclean clean install depend html ./test

%.cmi: %.mli
	$(CAMLC) $(ZDEBUG) $(ZFLAGS) $<

%.mli.d: %.mli
	$(OCAMLDEP) -slash $(OCAMLLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

%.cmo: %.ml4
	$(CAMLC) $(ZDEBUG) $(ZFLAGS) $(PP) -impl $<

%.cmx: %.ml4
	$(CAMLOPTC) $(ZDEBUG) $(ZFLAGS) $(PP) -impl $<

%.ml4.d: %.ml4
	$(OCAMLDEP) -slash $(OCAMLLIBS) $(PP) -impl "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

%.cmo: %.ml
	$(CAMLC) $(ZDEBUG) $(ZFLAGS) $<

%.cmx: %.ml
	$(CAMLOPTC) $(ZDEBUG) $(ZFLAGS) $<

%.ml.d: %.ml
	$(OCAMLDEP) -slash $(OCAMLLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

%.cmxs: %.cmx
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -shared -o $@ $<

%.cma: | %.mllib
	$(CAMLLINK) $(ZDEBUG) $(ZFLAGS) -a -o $@ $^

%.cmxa: | %.mllib
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -a -o $@ $^

%.cmxs: %.cmxa
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -linkall -shared -o $@ $<

%.mllib.d: %.mllib
	$(COQDEP) -slash $(COQLIBS) -c "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

install-natdynlink:
	for i in $(CMXSFILES); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i; \
	done

install:$(if ifeq '$(HASNATDYNLINK)' 'true',install-natdynlink)
	for i in $(CMOFILES); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i; \
	done
	for i in $(CMIFILES); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i; \
	done
	for i in $(CMAFILES); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/RelationExtraction/$$i; \
	done
	(cd ./test; $(MAKE) DSTROOT=$(DSTROOT) INSTALLDEFAULTROOT=$(INSTALLDEFAULTROOT)/./test install)

install-doc:
	install -d $(DSTROOT)$(DOCDIR)user-contrib/RelationExtraction/mlihtml
	for i in mlihtml/*; do \
	 install $$i $(DSTROOT)$(DOCDIR)user-contrib/RelationExtraction/$$i;\
	done

clean:
	rm -f *~ Makefile-localvars.gen
	rm -f $(CMOFILES) $(CMIFILES) $(CMXFILES) $(CMAFILES) $(CMXAFILES) $(CMXSFILES) $(OFILES)
	rm -f $(MLFILES:.ml=.ml.d) $(MLIFILES:.mli=.mli.d) $(ML4FILES:.ml4=.ml4.d) $(MLLIBFILES:.mllib=.mllib.d)
	rm -f all.ps all-gal.ps all.pdf all-gal.pdf all.glob $(VFILES:.v=.glob) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) all-mli.tex
	- rm -rf html mlihtml
	- rm -rf 
	(cd ./test ; $(MAKE) clean)

archclean:
	rm -f *.cmx *.o
	(cd ./test ; $(MAKE) archclean)


printenv: Makefile-localvars.gen
	@cat $^
	@echo CAMLC =	$(CAMLC)
	@echo CAMLOPTC =	$(CAMLOPTC)
	@echo PP =	$(PP)
	@echo COQFLAGS =	$(COQFLAGS)

Makefile: Make
	mv -f $@ $@.bak
	$(COQBIN)coq_makefile -f $< -o $@

	(cd ./test ; $(MAKE) Makefile)

-include $(MLFILES:.ml=.ml.d)
.SECONDARY: $(MLFILES:.ml=.ml.d)

-include $(MLIFILES:.mli=.mli.d)
.SECONDARY: $(MLIFILES:.mli=.mli.d)

-include $(ML4FILES:.ml4=.ml4.d)
.SECONDARY: $(ML4FILES:.ml4=.ml4.d)

-include $(MLLIBFILES:.mllib=.mllib.d)
.SECONDARY: $(MLLIBFILES:.mllib=.mllib.d)

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

